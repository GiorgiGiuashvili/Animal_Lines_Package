using UnityEngine;
using System.Collections.Generic;
using Spine.Unity;

public class AnimalSpawner : MonoBehaviour
{
    public List<GameObject> Set1;
    public List<GameObject> Set2;
    public List<GameObject> Set3;

    public Transform spawnPosition1;
    public Transform spawnPosition2;
    public Transform spawnPosition3;

    private int placedObjectCount = 0;
    [Space]
    public GameObject FinishPanel;
    private AnimalDrag anidrag;
    public string jumpAnimation = "Happy";

    void Start()
    {
        // Ensure we get the correct reference to the AnimalDrag component
        anidrag = GetComponent<AnimalDrag>();

        // If AnimalDrag is missing, log an error and stop execution
        if (anidrag == null)
        {
            Debug.LogError("AnimalDrag component not found on this GameObject!");
            return;
        }

        SpawnNextObject();
    }

    void SpawnNextObject()
    {
        if (Set1.Count == 0 && Set2.Count == 0 && Set3.Count == 0)
        {
            // Play the jump animation once all objects are placed
            anidrag.SetSpineAnimation(jumpAnimation, false);
            FinishPanel.SetActive(true);
            return;
        }

        if (Set1.Count > 0)
        {
            SpawnObject(Set1[0], spawnPosition1);
            Set1.RemoveAt(0);
        }

        if (Set2.Count > 0)
        {
            SpawnObject(Set2[0], spawnPosition2);
            Set2.RemoveAt(0);
        }

        if (Set3.Count > 0)
        {
            SpawnObject(Set3[0], spawnPosition3);
            Set3.RemoveAt(0);
        }
    }

    void SpawnObject(GameObject animalPrefab, Transform spawnPosition)
    {
        if (animalPrefab != null && spawnPosition != null)
        {
            GameObject spawnedAnimal = Instantiate(animalPrefab, spawnPosition.position, Quaternion.identity);
        }
    }

    public void ObjectPlaced()
    {
        placedObjectCount++;

        if (placedObjectCount == 3)
        {
            placedObjectCount = 0;
            SpawnNextObject();
        }
    }
}
